using ProjectEuler.FibonacciNumbers;
using Xunit;

namespace ProjectEuler.Tests.FibonacciNumbers
{
    /// <summary>
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    /// </summary>
    public class EvenFibonacciNumbersSumTests
    {
        private readonly EvenFibonacciNumbersSum _sut;

        public EvenFibonacciNumbersSumTests()
        {
            var fibonacciNumberHandler = new FibonacciNumberHandler();
            _sut = new EvenFibonacciNumbersSum(fibonacciNumberHandler);
        }

        [Fact]
        public void ShouldCalculateTheValueOfEvenFibonacciNumbersInAFibonacciSequence()
        {
            //When
            var result = _sut.Calculate(10);

            //Then
            const int expectResult = 44; //2 + 8 + 34
            Assert.Equal(expectResult, result);
        }

    }
}
